main {

  appName = "AkkaEventhubs"
  appName = ${?APP_NAME}

}

akka {

  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = ${?AKKA_LOG_LEVEL}
  loglevel = "INFO"

  actor {

    serializers {
    }
    serialization-bindings {
    }
  }

}

akka.persistence.journal.plugin = "akka-contrib-mongodb-persistence-journal"
akka.persistence.snapshot-store.plugin = "akka-contrib-mongodb-persistence-snapshot"
// note: "akka_persistence_realtime" and "akka_persistence_metadata" are not controlled here.  todo: reseaerch "suffixed collection names"
akka.contrib.persistence.mongodb.mongo.mongouri = ${MONGOURI}
akka.contrib.persistence.mongodb.mongo.journal-collection = "my_example_persistent_journal"
akka.contrib.persistence.mongodb.mongo.journal-index = "my_example_journal_index"
akka.contrib.persistence.mongodb.mongo.snaps-collection = "my_example_persistent_snapshots"
akka.contrib.persistence.mongodb.mongo.snaps-index = "my_example_snaps_index"
akka.contrib.persistence.mongodb.mongo.journal-write-concern = "Acknowledged"
akka.contrib.persistence.mongodb.mongo.journal-wtimeout = 3s
akka.contrib.persistence.mongodb.mongo.journal-fsync = false
akka.contrib.persistence.mongodb.mongo.snaps-wtimeout = 3s
akka.contrib.persistence.mongodb.mongo.snaps-fsync = false

eventhubs-1 {

  snapShotInterval = 100
  snapShotInterval = ${?SNAP_SHOT_INTERVAL}

  offsetPersistenceId = "my_example_eventhubsOffset"

  connection {

    endpoint = ${EVENTHUBS_1_ENDPOINT}

    name = ${EVENTHUBS_1_NAME}

    namespace = ${EVENTHUBS_1_NAMESPACE}

    partitions = ${EVENTHUBS_1_PARTITION_COUNT}

    accessPolicy = ${EVENTHUBS_1_ACCESS_POLICY}

    accessKey = ${EVENTHUBS_1_ACCESS_KEY}

    consumerGroup = "$Default"
    consumerGroup = ${?EVENTHUBS_1_CONSUMER_GROUP}

    receiverTimeout = 30s
    receiverTimeout = ${?EVENTHUBS_1_RECEIVER_TIMEOUT}

    receiverBatchSize = 1
    receiverBatchSize = ${?EVENTHUBS_1_RECEIVER_BATCH_SIZE}

  }

}
